//CHECKSTYLE:OFF
/**
 * Copyright (c) 2005-2012. Centre for Research on Inner City Health, St. Michael's Hospital, Toronto. All Rights Reserved.
 * This software is published under the GPL GNU General Public License.
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * <p>
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * <p>
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * <p>
 * This software was written for
 * Centre for Research on Inner City Health, St. Michael's Hospital,
 * Toronto, Ontario, Canada
 */

package org.caisi.wl;

import ca.openosp.openo.ehrutil.MiscUtils;
import org.apache.logging.log4j.Logger;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 *
 * <pre>
 * WaitListService service = new WaitListService()
 * WaitListService portType = service.getWaitListServicePort()
 * portType.listTopMatches(...);
 * </pre>
 *
 * </p>
 */
@WebServiceClient(name = "WaitListService", targetNamespace = "http://caisi.org/wl/", wsdlLocation = "http://localhost:8080/wlws/WaitListServicePort?wsdl")
public class WaitListService_Service extends Service {

    private final static URL WAITLISTSERVICE_WSDL_LOCATION;
    private final static Logger logger = MiscUtils.getLogger();

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.caisi.wl.WaitListService_Service.class
                    .getResource(".");
            url = new URL(baseUrl,
                    "http://localhost:8080/wlws/WaitListServicePort?wsdl");
        } catch (MalformedURLException e) {
            logger.warn("Failed to create URL for the wsdl Location: 'http://localhost:8080/wlws/WaitListServicePort?wsdl', retrying as a local file", e.getMessage());
        }
        WAITLISTSERVICE_WSDL_LOCATION = url;
    }

    public WaitListService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WaitListService_Service() {
        super(WAITLISTSERVICE_WSDL_LOCATION, new QName("http://caisi.org/wl/",
                "WaitListService"));
    }

    /**
     * @return returns WaitListService
     */
    @WebEndpoint(name = "WaitListServicePort")
    public WaitListService getWaitListServicePort() {
        return super.getPort(new QName("http://caisi.org/wl/",
                "WaitListServicePort"), WaitListService.class);
    }

}
