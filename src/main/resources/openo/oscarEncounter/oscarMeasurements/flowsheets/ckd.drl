<?xml version="1.0"?>
<rule-set name="ckdFlowSheet"
          xmlns="http://drools.org/rules"
          xmlns:java="http://drools.org/semantics/java"
          xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
          xs:schemaLocation="http://drools.org/rules rules.xsd
                             http://drools.org/semantics/java java.xsd">


<!--
  Copyright (c) 2001-2002. Department of Family Medicine, McMaster University. All Rights Reserved. 
  This software is published under the GPL GNU General Public License.
  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version. 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details. * * You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. 
 
  Document   : ckdFlowsheet.xml
  Created on : March 26, 2013, 3:28 PM
  Author     : John Wilson
  Description:
        Define ckd flowsheet
-->
 <rule name="ACR 1">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.MeasurementInfo</class>
        </parameter>
        <java:condition>m.getLastDateRecordedInMonths("ACR") &gt;= 10</java:condition>
        <java:condition>m.getLastDateRecordedInMonths("ACR") &lt; 12</java:condition>
        <java:consequence>              
              m.log("ACR 1 getting called");
              m.addRecommendation("ACR","An Alb: creat ratio value hasn't been recorded in "+m.getLastDateRecordedInMonths("ACR")+" months");
        </java:consequence>
    </rule>

    <rule name="ACR 2">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.MeasurementInfo</class>
        </parameter>
        <java:condition>m.getLastDateRecordedInMonths("ACR") &gt;= 12</java:condition>        
        <java:consequence>              
              m.log("ACR 2 getting called");
              m.addWarning("ACR","An Alb: creat ratio value hasn't been recorded in "+m.getLastDateRecordedInMonths("ACR")+" months");
        </java:consequence>
    </rule>

    <rule name="ACR 3">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.MeasurementInfo</class>
        </parameter>
        <java:condition>m.getLastDateRecordedInMonths("ACR") ==  -1</java:condition>
        <java:consequence>              
              m.log("ACR 3 getting called");
              m.addWarning("ACR","An Alb: creat ratio value has not been recorded");
        </java:consequence>
    </rule>

    <rule name="EGFR 1">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.MeasurementInfo</class>
        </parameter>
        <java:condition>m.getLastDateRecordedInMonths("EGFR") &gt;= 10</java:condition>
        <java:condition>m.getLastDateRecordedInMonths("EGFR") &lt; 12</java:condition>
        <java:consequence>              
              m.log("EGFR 1 getting called");
              m.addRecommendation("EGFR","An eGFR value hasn't been recorded in "+m.getLastDateRecordedInMonths("EGFR")+" months");
        </java:consequence>
    </rule>

    <rule name="EGFR 2">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.MeasurementInfo</class>
        </parameter>
        <java:condition>m.getLastDateRecordedInMonths("EGFR") &gt;= 12</java:condition>        
        <java:consequence>              
              m.log("EGFR 2 getting called");
              m.addWarning("EGFR","An eGFR value hasn't been recorded in "+m.getLastDateRecordedInMonths("EGFR")+" months");
        </java:consequence>
    </rule>

    <rule name="EGFR 3">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.MeasurementInfo</class>
        </parameter>
        <java:condition>m.getLastDateRecordedInMonths("EGFR") ==  -1</java:condition>
        <java:consequence>              
              m.log("EGFR 3 getting called");
              m.addWarning("EGFR","An eGFR value has not been recorded");
        </java:consequence>
    </rule>

</rule-set>


