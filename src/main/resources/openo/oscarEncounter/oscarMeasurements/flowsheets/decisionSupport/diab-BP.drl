<?xml version="1.0"?>



<rule-set name="DiabetesBP"
          xmlns="http://drools.org/rules"
          xmlns:java="http://drools.org/semantics/java"
          xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
          xs:schemaLocation="http://drools.org/rules rules.xsd
                             http://drools.org/semantics/java java.xsd">

    <rule name="BP">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.util.MeasurementDSHelper</class>
        </parameter>
        <java:condition>m.getNumberFromSplit("/",0) &gt; 130</java:condition>       
        <java:condition>m.getNumberFromSplit("/",1) &gt; 80</java:condition>       
        <java:consequence>     
              m.log("BP RULES IS GETTING RUN");
              m.setIndicationColor("HIGH 1");
        </java:consequence>
    </rule>

    <rule name="BP 2">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.util.MeasurementDSHelper</class>
        </parameter>
        <java:condition>m.getNumberFromSplit("/",0) &lt;= 130</java:condition>       
        <java:condition>m.getNumberFromSplit("/",1) &gt; 80</java:condition>       
        <java:consequence>     
              m.log("BP RULES IS GETTING RUN");
              m.setIndicationColor("HIGH");
        </java:consequence>
    </rule>

    <rule name="BP 3">
        <parameter identifier="m">
            <class>oscar.oscarEncounter.oscarMeasurements.util.MeasurementDSHelper</class>
        </parameter>
        <java:condition>m.getNumberFromSplit("/",0) &gt; 130</java:condition>       
        <java:condition>m.getNumberFromSplit("/",1) &lt;= 80</java:condition>       
        <java:consequence>     
              m.log("BP RULES IS GETTING RUN");
              m.setIndicationColor("HIGH");
        </java:consequence>
    </rule>

</rule-set>


